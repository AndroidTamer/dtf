.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "DTF\-PROJECT" "7" "August 2016" "dtf-1.3-1.dev" "dtf Manual"
.
.SH "NAME"
\fBdtf\-project\fR \- Information on dtf project structure
.
.SH "KEY FILES & DIRECTORIES"
local_modules/ \- The local modules directory contains non\-global modules accessible to only the given project\. reports/ \- Used by modules to store reports\. \.dbs/ \- Directory used by modules for database storage\. \.dtfini \- Property information stored by dtf\-prop(1) for the current project\. \.dtflog \- Saved logs generated by dtf(1) or installed content\.
.
.P
Generally speaking, properties stored by dtf\-prop(1) will reside in either the "Info" or "Local" section\. By convention, these should be alphanumeric and \'\-\':
.
.IP "" 4
.
.nf

$ dtf prop set Local system\-apps "system\-apps"
.
.fi
.
.IP "" 0
.
.SH "PROJECT LIFECYCLE"
Each major software release of a device should have its own project\. To create a new project, we use dtf\-init(1):
.
.IP "" 4
.
.nf

$ mkdir new_project
$ cd new_project
$ dtf init
.
.fi
.
.IP "" 0
.
.P
This configs any infiguration needed to begin testing your device\. At some point, you may want to move on\. At this point, you can use dtf\-archive(1) to save some space:
.
.IP "" 4
.
.nf

$ dtf archive
.
.fi
.
.IP "" 0
.
.P
You may also want to purge information about your test device (not actual data!) using dtf\-reset(1):
.
.IP "" 4
.
.nf

$ dtf reset
.
.fi
.
.IP "" 0
.
.SH "AUTHOR"
Jake Valletta \fIjavallet@gmail\.com\fR
.
.SH "SEE ALSO"
dtf\-archive(1), dtf\-init(1), dtf\-local(1), dtf\-prop(1), dtf\-reset(1)
