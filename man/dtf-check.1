.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "DTF\-CHECK" "1" "August 2016" "dtf-1.3-1.dev" "dtf Manual"
.
.SH "NAME"
\fBdtf\-check\fR \- Check a dtf Module for errors and style
.
.SH "SYNOPSIS"
dtf check \-s \-a [\fIfile_name\fR]
.
.SH "DESCRIPTION"
dtf\-check(1) checks a dtf\-module(7) for syntax and style weaknesses\. Those who wish to contribute to dtf(1) should use this utility to ensure they are introducing robust and readadble code\. Since dtf\-check(1) uses the same functions used by dtf(1) to load modules, it ensures the specified module:
.
.IP "" 4
.
.nf

\- Will be detected as a python or bash module
\- Will pass all autoparse checks
\- Contains only best practice values in autoparse
\- Will pass `pylint` and `flake8` checks (optional)
.
.fi
.
.IP "" 0
.
.SH "EXAMPLES"
dtf\-check(1) takes a \fBfile_name\fR argument:
.
.IP "" 4
.
.nf

$ dtf_check mynewmodule
.
.fi
.
.IP "" 0
.
.P
To run dtf\-check(1) will all checks, use the all (\fB\-a\fR) argument:
.
.IP "" 4
.
.nf

$ dtf_check \-a mynewmodule
.
.fi
.
.IP "" 0
.
.P
If you want to treat warnings as errors (recommended), use the strict (\fB\-s\fR) argument:
.
.IP "" 4
.
.nf

$ dtf_check \-sa mynewmodule
.
.fi
.
.IP "" 0
.
.P
For more information on creating modules, see dtf\-module(7)\.
.
.SH "AUTHOR"
Jake Valletta \fIjavallet@gmail\.com\fR
.
.SH "DTF"
Part of the dtf(1) suite\.
